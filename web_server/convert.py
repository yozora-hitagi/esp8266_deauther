
#-*- coding:utf-8 -*-


import os
import sys


def listfile(filepath, suffix):
    li = []
    files = os.listdir(filepath)
    for file in files:
        # print file
        # print file.find(suffix) , len(file),len(suffix)
        if file.find(suffix) == (len(file) - len(suffix)):
            # print file
            li.append(os.path.join('%s%s' % (filepath, file)))
    return li


def filetohex(file):
    buf = []
    fp = open(file, 'rb')
    while True:
        chunk = fp.read(100)
        if not chunk:
            break
        for i, ch in enumerate(chunk):
            # print ch
            buf.append(hex(ord(ch)))
    return buf


def formatfilename(file):
    name = os.path.basename(file)
    name = name.replace('.', '_')
    return name


def output(fp, file, buf):
    fp.write("const char data_" + formatfilename(file) + "[] PROGMEM = {")
    l = len(buf)
    for i in range(l):
        fp.write(buf[i])
        if i < len(buf) - 1:
            fp.write(',')
    fp.write("};\n")


def compressJSCSS(fp, filepath):
    files1 = listfile(filepath, ".js")
    files2 = listfile(filepath, ".css")
    files = []
    for file in files1:
        files.append(file)
    for file in files2:
        files.append(file)
    for file in files:
        print file
        # if os.path.exists(file):
        #    os.remove(file + ".min")
        os.popen("java -jar yuicompressor-2.4.8.jar " +
                 file + " -o " + file + ".min --charset utf-8")
        buf = filetohex(file + ".min")
        output(fp, file, buf)
        os.remove(file + ".min")


def compressHTML(fp, filepath):
    files = listfile(filepath, ".html")
    for file in files:
        print file

        hfp = open(file, "r")
        lines = hfp.readlines()
        buf = []
        for line in lines:
            if(len(line.strip()) > 0):
                for i, ch in enumerate(line.strip()):
                    buf.append(hex(ord(ch)))
        output(fp, file, buf)


if __name__ == "__main__":
    if os.path.exists("data_h_temp"):
        os.remove("data_h_temp")
    fp = open("data_h_temp", "ab+")
    fp.write("/* constants generated by convert.py - start */\n")
    compressJSCSS(fp, "./html/")
    compressHTML(fp, "./html/")
    fp.write("/* constants generated by convert.py - end */\n")
    fp.close()
